services:

  riot-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      BACKEND_CORE_URL: ${BACKEND_CORE_URL}
    depends_on:
        - riot-backend-core
    ports:
        - "8080:80"

  riot-backend-core:
    build:
      context: ./backend
      dockerfile: backend-core/Dockerfile
    environment:
      POSTGRES_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB_NAME}
      RABBITMQ_URL: ${RABBITMQ_URL}
      # GOOGLE_OAUTH2_CLIENT_ID: abcdef contact @xjohnp00 if you need user pool details
      # GOOGLE_OAUTH2_CLIENT_SECRET: abcdef
      # JWT_SECRET: abcdef but more secret-y
      # ALLOWED_ORIGINS: http://localhost:8080,http://localhost:1234 # Essentially a API client whitelist TODO: Configure this as needed...
      # SECURE_COOKIES: "" # Comment this out if you are using http instead of https
      # JWT_AUTHENTICATION_MIDDLEWARE_ENABLED: "" # Comment this out if you need unrestricted API access without authentication
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - "9090:9090"
    #cpu_quota: 1000 # 1% of a single CPU core
    #mem_limit: 32m # 32 MB of RAM

  riot-message-processing-unit:
    build:
      context: ./backend
      dockerfile: message-processing-unit/Dockerfile
    environment:
      BACKEND_CORE_URL: ${BACKEND_CORE_URL}
      RABBITMQ_URL: ${RABBITMQ_URL}
    depends_on:
      - rabbitmq
      - riot-backend-core # 'Backend-core' has to set up the 'RabbitMQ infrastructure'
    #cpu_quota: 1000 # 1% of a single CPU core
    #mem_limit: 32m # 32 MB of RAM

  riot-mqtt-preprocessor:
    build:
      context: ./backend
      dockerfile: mqtt-preprocessor/Dockerfile
    environment:
      MQTT_BROKER_URL: mqtt://mosquitto:1883
      MQTT_BROKER_USERNAME: admin
      MQTT_BROKER_PASSWORD: password
      MQTT_TOPIC: topic
      BACKEND_CORE_URL: ${BACKEND_CORE_URL}
      RABBITMQ_URL: ${RABBITMQ_URL}
    depends_on:
      - rabbitmq
      - mosquitto # TODO: Consider getting rid of this 'dependency' (by adding a full-fledged MQTT configuration)
      - riot-backend-core # 'Backend-core' has to set up the 'RabbitMQ infrastructure'
    #cpu_quota: 1000 # 1% of a single CPU core
    #mem_limit: 32m # 32 MB of RAM

  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - "9001:9001"
      - "1883:1883"
    volumes:
      - ./docker/mosquitto-config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./docker/mosquitto-config/password.txt:/mosquitto/config/password.txt
      - ./docker/mosquitto-data:/mosquitto/data
      - ./docker/mosquitto-log:/mosquitto/log

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com # Not a real e-mail address...
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "8081:80"

  influxdb:
    image: influxdb:2.7-alpine
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=user
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=jiap
      - DOCKER_INFLUXDB_INIT_BUCKET=jiap-time-series
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=Fgp2ozMxmkYnUBkzwLpkx6ydOVXyQqF4-ZPctGjv8-xkirYPYRvoBtrpAHMCr_joYoJMOqZjl8djjuyOx-MR_A==
    healthcheck:
      test: [ "CMD", "influx", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  riot-time-series-store:
    build:
      context: ./backend
      dockerfile: time-series-store/Dockerfile
    environment:
      BACKEND_CORE_URL: ${BACKEND_CORE_URL}
      RABBITMQ_URL: ${RABBITMQ_URL}
      INFLUX_ORGANIZATION: jiap
      INFLUX_BUCKET: jiap-time-series
      INFLUX_URL: http://influxdb:8086
      INFLUX_TOKEN: Fgp2ozMxmkYnUBkzwLpkx6ydOVXyQqF4-ZPctGjv8-xkirYPYRvoBtrpAHMCr_joYoJMOqZjl8djjuyOx-MR_A==
    depends_on:
      - rabbitmq
      - riot-backend-core # 'Backend-core' has to set up the 'RabbitMQ infrastructure'

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # Main (amqp)
      - "15672:15672" # Management
      - "15692:15692" # Prometheus

  grafana:
    image: grafana/grafana-enterprise
    profiles: ["dev"]
    volumes:
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password

  prometheus:
    image: prom/prometheus
    profiles: ["dev"]
    volumes:
      - "./docker/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9091:9090"

  mqtt-prometheus-exporter:
    profiles: ["dev"]
    image: kpetrem/mqtt-exporter
    ports:
      - "9000:9000"
    environment:
      MQTT_ADDRESS: mosquitto
      MQTT_TOPIC: topic
      MQTT_USERNAME: admin
      MQTT_PASSWORD: password
