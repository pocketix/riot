# This is a basic workflow to help you get started with Actions

name: "Build and Deploy Production"

# Controls when the workflow will run
on:
  #push:
  #  branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set GIT_HASH and CURRENT_DATE variables
        run: |
          echo "GIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "PLATFORMS=linux/amd64,linux/arm64" >> $GITHUB_ENV

      - name: Build Backend Microservice - Backend Core
        run: |
          docker buildx build --platform $PLATFORMS --push -t $IMAGE -f ./backend/backend-core/Dockerfile ./backend
          
          for i in $(echo $PLATFORMS | sed "s/,/ /g"); do ~/regctl image copy $IMAGE:latest $IMAGE:$GIT_HASH-"$(echo "$i" | tr / -)"; echo "Re-tagging image " "$i" " as " "$GIT_HASH" "-" "$i"; done
          for i in $(echo $PLATFORMS | sed "s/,/ /g"); do ~/regctl image copy $IMAGE:latest $IMAGE:$CURRENT_DATE-"$(echo "$i" | tr / -)"; echo "Re-tagging image " "$i" " as " "$CURRENT_DATE" "-" "$i"; done
          
          echo "Done $IMAGE"
        env:
          IMAGE: dexter.fit.vutbr.cz/riot/backend

      - name: Build Backend Microservice - MQTT Preprocessor
        run: |
          docker buildx build --platform $PLATFORMS --push -t $IMAGE -f ./backend/mqtt-preprocessor/Dockerfile ./backend
          
          for i in $(echo $PLATFORMS | sed "s/,/ /g"); do ~/regctl image copy $IMAGE:latest $IMAGE:$GIT_HASH-"$(echo "$i" | tr / -)"; echo "Re-tagging image " "$i" " as " "$GIT_HASH" "-" "$i"; done
          for i in $(echo $PLATFORMS | sed "s/,/ /g"); do ~/regctl image copy $IMAGE:latest $IMAGE:$CURRENT_DATE-"$(echo "$i" | tr / -)"; echo "Re-tagging image " "$i" " as " "$CURRENT_DATE" "-" "$i"; done
          
          echo "Done $IMAGE"
        env:
          IMAGE: dexter.fit.vutbr.cz/riot/preprocessor

      - name: Build Backend Microservice - Time Series Store
        run: |
          docker buildx build --platform $PLATFORMS --push -t $IMAGE -f ./backend/time-series-store/Dockerfile ./backend
          
          for i in $(echo $PLATFORMS | sed "s/,/ /g"); do ~/regctl image copy $IMAGE:latest $IMAGE:$GIT_HASH-"$(echo "$i" | tr / -)"; echo "Re-tagging image " "$i" " as " "$GIT_HASH" "-" "$i"; done
          for i in $(echo $PLATFORMS | sed "s/,/ /g"); do ~/regctl image copy $IMAGE:latest $IMAGE:$CURRENT_DATE-"$(echo "$i" | tr / -)"; echo "Re-tagging image " "$i" " as " "$CURRENT_DATE" "-" "$i"; done
          
          echo "Done $IMAGE"
        env:
          IMAGE: dexter.fit.vutbr.cz/riot/time-series-store

      - name: Build Backend Microservice - Message Processing Unit
        run: |
          docker buildx build --platform $PLATFORMS --push -t $IMAGE -f ./backend/message-processing-unit/Dockerfile ./backend
          
          for i in $(echo $PLATFORMS | sed "s/,/ /g"); do ~/regctl image copy $IMAGE:latest $IMAGE:$GIT_HASH-"$(echo "$i" | tr / -)"; echo "Re-tagging image " "$i" " as " "$GIT_HASH" "-" "$i"; done
          for i in $(echo $PLATFORMS | sed "s/,/ /g"); do ~/regctl image copy $IMAGE:latest $IMAGE:$CURRENT_DATE-"$(echo "$i" | tr / -)"; echo "Re-tagging image " "$i" " as " "$CURRENT_DATE" "-" "$i"; done
          
          echo "Done $IMAGE"
        env:
          IMAGE: dexter.fit.vutbr.cz/riot/mpu
